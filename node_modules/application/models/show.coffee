youtube = require('youtube-get')(process.env.YOUTUBE_API_KEY)

fetchChannelSections = (cb) ->
  apiParams =
    'part': 'id,snippet,contentDetails'
    'channelId': process.env.CHANNEL_ID
  youtube 'channelSections', apiParams, (err, data) -> cb(data.items)

fetchPlaylists = (playlistIds, cb) ->
  apiParams =
    'id': playlistIds.join(',')
    'part': 'id,snippet,status,contentDetails'
  youtube 'playlists', apiParams, (err, data) -> cb(data.items)

cleanupKeys = (channelSection) ->
  delete channelSection.snippet
  delete channelSection.etag
  delete channelSection.kind
  delete channelSection.contentDetails
  channelSection

addExtraKeys = (channelSection) ->
  channelSection.playlists = channelSection.contentDetails.playlists
  channelSection.name = channelSection.title
    .replace(/[\s\/]/g, '-')
    .toLowerCase()
  channelSection

findAll = (callback) ->
  await fetchChannelSections defer(channelSections)

  playlists = []

  await
    for channelSection, index in channelSections
      if not channelSection.contentDetails? then continue
      playlistIds = channelSection.contentDetails.playlists
      fetchPlaylists(playlistIds, defer(playlists[index]))

  shows = []

  for channelSection, index in channelSections
    if not channelSection.contentDetails? then continue
    channelSectionPlaylists = playlists[index]
    channelSection.description = channelSectionPlaylists[0].snippet.description
    channelSection.thumbnails = channelSectionPlaylists[0].snippet.thumbnails
    if channelSectionPlaylists.length is 1
      channelSection.title = channelSectionPlaylists[0].snippet.title
    else
      channelSection.title = channelSection.snippet.title
    channelSection = addExtraKeys(channelSection)
    channelSection = cleanupKeys(channelSection)
    shows.push channelSection

  callback shows

findByName = (name, callback) ->
  findAll (shows) ->
    for show in shows
      if show.name is name
        return callback show
    callback null

findByPk = (id, callback) ->
  findAll (shows) ->
    for show in shows
      if show.id is id
        return callback show
    callback null

module.exports =
  findAll: findAll
  findByName: findByName
  findByPk: findByPk

